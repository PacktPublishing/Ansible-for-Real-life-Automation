# Test code for the vmware_cluster module.
# Copyright: (c) 2017, Abhijeet Kasurde <akasurde@redhat.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- import_role:
    name: prepare_vmware_tests

- when: vcsim is not defined
  block:
    # Setup: Create test cluster
    - name: Create test cluster
      vmware_cluster:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter_name: "{{ dc1 }}"
        cluster_name: test_cluster_vsan
        state: present

    # Testcase 0001: Enable vSAN
    - name: Enable vSAN
      vmware_cluster_vsan:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter_name: "{{ dc1 }}"
        cluster_name: test_cluster_vsan
        enable: true
      register: cluster_vsan_result_0001

    - name: Ensure vSAN is enabled
      assert:
        that:
        - "{{ cluster_vsan_result_0001.changed == true }}"

    # Testcase 0002: Enable vSAN again (check for idempotency)
    - name: Enable vSAN again (check for idempotency)
      vmware_cluster_vsan:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter_name: "{{ dc1 }}"
        cluster_name: test_cluster_vsan
        enable: true
      register: cluster_vsan_result_0002

    - name: Ensure vSAN is not enabled again
      assert:
        that:
        - "{{ cluster_vsan_result_0002.changed == false }}"

    # Testcase 0003: Change object repair timer
    - name: Change object repair timer
      vmware_cluster_vsan:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter_name: "{{ dc1 }}"
        cluster_name: test_cluster_vsan
        enable: true
        advanced_options:
          object_repair_timer: 67
      register: cluster_vsan_result_0003

    - name: Ensure object repair timer is changed
      assert:
        that:
        - "{{ cluster_vsan_result_0003.changed == true }}"

    # Testcase 0004: Change object repair timer again (check for idempotency)
    - name: Change object repair timer again (check for idempotency)
      vmware_cluster_vsan:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter_name: "{{ dc1 }}"
        cluster_name: test_cluster_vsan
        enable: true
        advanced_options:
          object_repair_timer: 67
      register: cluster_vsan_result_0004

    - name: Ensure object repair timer is not changed again
      assert:
        that:
        - "{{ cluster_vsan_result_0004.changed == false }}"

    # Testcase 0005: Disable vSAN
    - name: Disable vSAN
      vmware_cluster_vsan:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter_name: "{{ dc1 }}"
        cluster_name: test_cluster_vsan
        enable: false
      register: cluster_vsan_result_0005

    - name: Ensure vSAN is disabled
      assert:
        that:
            - "{{ cluster_vsan_result_0005.changed == true }}"

    # Testcase 0006: Disable vSAN again (check for idempotency)
    - name: Disable vSAN again (check for idempotency)
      vmware_cluster_vsan:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter_name: "{{ dc1 }}"
        cluster_name: test_cluster_vsan
        enable: false
      register: cluster_vsan_result_0006

    - name: Ensure vSAN is not disabled again
      assert:
        that:
            - "{{ cluster_vsan_result_0006.changed == false }}"

    # Delete test cluster
    - name: Delete test cluster
      vmware_cluster:
        validate_certs: false
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter_name: "{{ dc1 }}"
        cluster_name: test_cluster_vsan
        state: absent
