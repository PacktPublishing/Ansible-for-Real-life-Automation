# Test code for the vmware_guest module.
# Copyright: (c) 2018, Abhijeet Kasurde <akasurde@redhat.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

# Clone from existing VM with DVPG
- when: vcsim is not defined
  block:
    - name: Deploy VM from template
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ dc1 }}"
        state: poweredon
        folder: "{{ f0 }}"
        template: "{{ virtual_machines[0].name }}"
        name: test_vm1
        disk:
          - size: 1gb
            datastore: "{{ rw_datastore }}"
        guest_id: debian8_64Guest
        hardware:
          memory_mb: 128
          num_cpus: 1
        networks:
          - name: '{{ dvpg1 }}'
      register: no_vm_result
    - debug: var=no_vm_result
    - assert:
        that:
          - no_vm_result is changed

    # New clone with DVPG
    - name: Deploy new VM with DVPG
      vmware_guest:
        esxi_hostname: "{{ esxi_hosts[0] }}"
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ dc1 }}"
        state: poweredon
        folder: "{{ f0 }}"
        name: test_vm2
        disk:
          - size: 1gb
            datastore: "{{ rw_datastore }}"
        guest_id: debian8_64Guest
        hardware:
          memory_mb: 128
          num_cpus: 1
        networks:
          - name: '{{ dvpg1 }}'
            dvswitch_name: "{{ dvswitch1 }}"
      register: no_vm_result
    - debug: var=no_vm_result
    - assert:
        that:
          - no_vm_result is changed

    - name: Deploy same VM again
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ dc1 }}"
        state: poweredon
        folder: "{{ f0 }}"
        name: test_vm2
        disk:
          - size: 1gb
            datastore: "{{ rw_datastore }}"
        guest_id: debian8_64Guest
        hardware:
          memory_mb: 128
          num_cpus: 1
        networks:
          - name: '{{ dvpg1 }}'
      register: no_vm_result
    - debug: var=no_vm_result
    - assert:
        that:
          - not (no_vm_result is changed)

    - name: Deploy new VM with DVPG with slash in name
      vmware_guest:
        esxi_hostname: "{{ esxi_hosts[0] }}"
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ dc1 }}"
        state: poweredon
        folder: "{{ f0 }}"
        name: test_vm3
        disk:
          - size: 1gb
            datastore: "{{ rw_datastore }}"
        guest_id: debian8_64Guest
        hardware:
          memory_mb: 128
          num_cpus: 1
        networks:
          - name: '{{ dvpg_with_slash }}'
            dvswitch_name: "{{ dvswitch1 }}"
      register: no_vm_result
    - debug: var=no_vm_result
    - assert:
        that:
          - no_vm_result is changed

    - name: Deploy same VM again
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ dc1 }}"
        state: poweredon
        folder: "{{ f0 }}"
        name: test_vm3
        disk:
          - size: 1gb
            datastore: "{{ rw_datastore }}"
        guest_id: debian8_64Guest
        hardware:
          memory_mb: 128
          num_cpus: 1
        networks:
          - name: '{{ dvpg_with_slash }}'
      register: no_vm_result
    - debug: var=no_vm_result
    - assert:
        that:
          - not (no_vm_result is changed)

    - name: Integration test for issue 457(https://github.com/ansible-collections/community.vmware/issues/457)
      block:
        - name: Create a new dvportgroup with / in the name
          vmware_dvs_portgroup:
            hostname: "{{ vcenter_hostname }}"
            username: "{{ vcenter_username }}"
            password: "{{ vcenter_password }}"
            validate_certs: false
            switch_name: "{{ dvswitch1 }}"
            portgroup_name: "192.168.0.0/24"
            vlan_id: 0
            port_binding: 'static'
            port_allocation: 'fixed'
            num_ports: 8
            state: present
          register: create_dvportgroup_result

        - assert:
            that:
              - create_dvportgroup_result.changed is sameas true

        - name: Deploy VM with / in the portgroup name
          vmware_guest:
            hostname: "{{ vcenter_hostname }}"
            username: "{{ vcenter_username }}"
            password: "{{ vcenter_password }}"
            validate_certs: false
            datacenter: "{{ dc1 }}"
            esxi_hostname: "{{ esxi1 }}"
            state: poweredon
            folder: "{{ f0 }}"
            name: test_vm_slash
            disk:
              - size: 10mb
                datastore: "{{ rw_datastore }}"
            guest_id: debian8_64Guest
            hardware:
              memory_mb: 128
              num_cpus: 1
            networks:
              - name: '192.168.0.0/24'
                device_type: "vmxnet3"
          register: deploy_vm_slash_result

        - assert:
            that:
              - deploy_vm_slash_result.changed is sameas true

        - name: Delete the dvportgroup with / in the name
          vmware_dvs_portgroup:
            hostname: "{{ vcenter_hostname }}"
            username: "{{ vcenter_username }}"
            password: "{{ vcenter_password }}"
            validate_certs: false
            switch_name: "{{ dvswitch1 }}"
            portgroup_name: "192.168.0.0/24"
            vlan_id: 0
            port_binding: 'static'
            port_allocation: 'fixed'
            num_ports: 8
            state: absent
          register: delete_dvportgroup_result

        - assert:
            that:
              - delete_dvportgroup_result.changed is sameas true

  always:
    - when: vcsim is not defined
      name: Remove VM to free the portgroup
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        name: '{{ item }}'
        force: true
        state: absent
      with_items:
        - test_vm1
        - test_vm2
        - test_vm3
        - test_vm_slash
