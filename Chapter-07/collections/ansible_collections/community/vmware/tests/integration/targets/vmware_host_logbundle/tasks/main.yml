# Test code for the vmware_host_logbundle module.
# Copyright: (c) 2020, sky-joker <sky.jokerxx@gmail.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- import_role:
    name: prepare_vmware_tests
  vars:
    setup_attach_host: true

- set_fact:
    logbundle_archive_file_path: ./esxi-log.tgz

- name: fetch logbundle archive file from ESXi - connect to vCenter
  vmware_host_logbundle:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: false
    esxi_hostname: "{{ esxi1 }}"
    dest: "{{ logbundle_archive_file_path }}"
  register: fetch_logbundle_result

- assert:
    that:
      - fetch_logbundle_result.changed
      - fetch_logbundle_result.dest is defined

- name: exists check logbundle archive file
  stat:
    path: "{{ logbundle_archive_file_path }}"
  register: exists_check_logbundle_result

- assert:
    that:
      - exists_check_logbundle_result.stat.exists

- name: delete logbundle archive file
  file:
    path: "{{ logbundle_archive_file_path }}"
    state: absent
  register: delete_logbundle_result

- assert:
    that:
      - delete_logbundle_result.changed

- name: fetch logbundle archive file from ESXi - connect to ESXi
  vmware_host_logbundle:
    hostname: "{{ esxi1 }}"
    username: "{{ esxi_user }}"
    password: "{{ esxi_password }}"
    validate_certs: false
    esxi_hostname: "{{ esxi1 }}"
    dest: "{{ logbundle_archive_file_path }}"
  register: fetch_logbundle_result

- assert:
    that:
      - fetch_logbundle_result.changed
      - fetch_logbundle_result.dest is defined

- name: exists check logbundle archive file
  stat:
    path: "{{ logbundle_archive_file_path }}"
  register: exists_check_logbundle_result

- assert:
    that:
      - exists_check_logbundle_result.stat.exists

- name: delete logbundle archive file
  file:
    path: "{{ logbundle_archive_file_path }}"
    state: absent
  register: delete_logbundle_result

- assert:
    that:
      - delete_logbundle_result.changed

- name: fetch logbundle archive file from ESXi use manifests param - connect to vCenter
  vmware_host_logbundle:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: false
    esxi_hostname: "{{ esxi1 }}"
    dest: "{{ logbundle_archive_file_path }}"
    manifests:
      - System:Base
      - VirtualMachines:VirtualMachineStats
  register: fetch_logbundle_result

- assert:
    that:
      - fetch_logbundle_result.changed
      - fetch_logbundle_result.dest is defined

- name: exists check logbundle archive file
  stat:
    path: "{{ logbundle_archive_file_path }}"
  register: exists_check_logbundle_result

- assert:
    that:
      - exists_check_logbundle_result.stat.exists

- name: delete logbundle archive file
  file:
    path: "{{ logbundle_archive_file_path }}"
    state: absent
  register: delete_logbundle_result

- assert:
    that:
      - delete_logbundle_result.changed

- name: fetch logbundle archive file from ESXi use manifests param - connect to ESXi
  vmware_host_logbundle:
    hostname: "{{ esxi1 }}"
    username: "{{ esxi_user }}"
    password: "{{ esxi_password }}"
    validate_certs: false
    esxi_hostname: "{{ esxi1 }}"
    dest: "{{ logbundle_archive_file_path }}"
    manifests:
      - System:Base
      - VirtualMachines:VirtualMachineStats
  register: fetch_logbundle_result

- assert:
    that:
      - fetch_logbundle_result.changed
      - fetch_logbundle_result.dest is defined

- name: exists check logbundle archive file
  stat:
    path: "{{ logbundle_archive_file_path }}"
  register: exists_check_logbundle_result

- assert:
    that:
      - exists_check_logbundle_result.stat.exists

- name: delete logbundle archive file
  file:
    path: "{{ logbundle_archive_file_path }}"
    state: absent
  register: delete_logbundle_result

- assert:
    that:
      - delete_logbundle_result.changed

- name: fetch logbundle archive file from ESXi use performance_data param - connect to vCenter
  vmware_host_logbundle:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: false
    esxi_hostname: "{{ esxi1 }}"
    dest: "{{ logbundle_archive_file_path }}"
    performance_data:
      duration: 10
      interval: 5
  register: fetch_logbundle_result

- assert:
    that:
      - fetch_logbundle_result.changed
      - fetch_logbundle_result.dest is defined

- name: exists check logbundle archive file
  stat:
    path: "{{ logbundle_archive_file_path }}"
  register: exists_check_logbundle_result

- assert:
    that:
      - exists_check_logbundle_result.stat.exists

- name: delete logbundle archive file
  file:
    path: "{{ logbundle_archive_file_path }}"
    state: absent
  register: delete_logbundle_result

- assert:
    that:
      - delete_logbundle_result.changed

- name: fetch logbundle archive file from ESXi use performance_data param - connect to ESXi
  vmware_host_logbundle:
    hostname: "{{ esxi1 }}"
    username: "{{ esxi_user }}"
    password: "{{ esxi_password }}"
    validate_certs: false
    esxi_hostname: "{{ esxi1 }}"
    dest: "{{ logbundle_archive_file_path }}"
    performance_data:
      duration: 10
      interval: 5
  register: fetch_logbundle_result

- assert:
    that:
      - fetch_logbundle_result.changed
      - fetch_logbundle_result.dest is defined

- name: exists check logbundle archive file
  stat:
    path: "{{ logbundle_archive_file_path }}"
  register: exists_check_logbundle_result

- assert:
    that:
      - exists_check_logbundle_result.stat.exists

- name: delete logbundle archive file
  file:
    path: "{{ logbundle_archive_file_path }}"
    state: absent
  register: delete_logbundle_result

- assert:
    that:
      - delete_logbundle_result.changed

- name: error check for manifests(validate) - connect to vCenter
  vmware_host_logbundle:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: false
    esxi_hostname: "{{ esxi1 }}"
    dest: "{{ logbundle_archive_file_path }}"
    manifests:
      - example
  register: fetch_logbundle_result
  ignore_errors: true

- assert:
    that:
      - fetch_logbundle_result.failed

- name: error check for manifests(validate) - connect to ESXi
  vmware_host_logbundle:
    hostname: "{{ esxi1 }}"
    username: "{{ esxi_user }}"
    password: "{{ esxi_password }}"
    validate_certs: false
    esxi_hostname: "{{ esxi1 }}"
    dest: "{{ logbundle_archive_file_path }}"
    manifests:
      - example
  register: fetch_logbundle_result
  ignore_errors: true

- assert:
    that:
      - fetch_logbundle_result.failed
