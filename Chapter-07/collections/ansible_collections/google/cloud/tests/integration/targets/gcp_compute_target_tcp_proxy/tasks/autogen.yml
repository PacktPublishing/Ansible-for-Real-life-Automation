---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://www.github.com/GoogleCloudPlatform/magic-modules
#
# ----------------------------------------------------------------------------
# Pre-test setup
- name: create a instance group
  google.cloud.gcp_compute_instance_group:
    name: instancegroup-targettcpproxy
    zone: us-central1-a
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: instancegroup
- name: create a health check
  google.cloud.gcp_compute_health_check:
    name: healthcheck-targettcpproxy
    type: TCP
    tcp_health_check:
      port_name: service-health
      request: ping
      response: pong
    healthy_threshold: 10
    timeout_sec: 2
    unhealthy_threshold: 5
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: healthcheck
- name: create a backend service
  google.cloud.gcp_compute_backend_service:
    name: backendservice-targettcpproxy
    backends:
    - group: "{{ instancegroup.selfLink }}"
    health_checks:
    - "{{ healthcheck.selfLink }}"
    protocol: TCP
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: backendservice
- name: delete a target TCP proxy
  google.cloud.gcp_compute_target_tcp_proxy:
    name: "{{ resource_name }}"
    proxy_header: PROXY_V1
    service: "{{ backendservice }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: absent
#----------------------------------------------------------
- name: create a target TCP proxy
  google.cloud.gcp_compute_target_tcp_proxy:
    name: "{{ resource_name }}"
    proxy_header: PROXY_V1
    service: "{{ backendservice }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: result
- name: assert changed is true
  assert:
    that:
      - result.changed == true
- name: verify that target_tcp_proxy was created
  google.cloud.gcp_compute_target_tcp_proxy_info:
      filters:
         - name = {{ resource_name }}
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
        - https://www.googleapis.com/auth/compute
  register: results
- name: verify that command succeeded
  assert:
    that:
      - results['resources'] | length == 1
# ----------------------------------------------------------------------------
- name: create a target TCP proxy that already exists
  google.cloud.gcp_compute_target_tcp_proxy:
    name: "{{ resource_name }}"
    proxy_header: PROXY_V1
    service: "{{ backendservice }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: result
- name: assert changed is false
  assert:
    that:
      - result.changed == false
#----------------------------------------------------------
- name: delete a target TCP proxy
  google.cloud.gcp_compute_target_tcp_proxy:
    name: "{{ resource_name }}"
    proxy_header: PROXY_V1
    service: "{{ backendservice }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: absent
  register: result
- name: assert changed is true
  assert:
    that:
      - result.changed == true
- name: verify that target_tcp_proxy was deleted
  google.cloud.gcp_compute_target_tcp_proxy_info:
      filters:
         - name = {{ resource_name }}
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
        - https://www.googleapis.com/auth/compute
  register: results
- name: verify that command succeeded
  assert:
    that:
      - results['resources'] | length == 0
# ----------------------------------------------------------------------------
- name: delete a target TCP proxy that does not exist
  google.cloud.gcp_compute_target_tcp_proxy:
    name: "{{ resource_name }}"
    proxy_header: PROXY_V1
    service: "{{ backendservice }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: absent
  register: result
- name: assert changed is false
  assert:
    that:
      - result.changed == false
#---------------------------------------------------------
# Post-test teardown
# If errors happen, don't crash the playbook!
- name: delete a backend service
  google.cloud.gcp_compute_backend_service:
    name: backendservice-targettcpproxy
    backends:
    - group: "{{ instancegroup.selfLink }}"
    health_checks:
    - "{{ healthcheck.selfLink }}"
    protocol: TCP
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: absent
  register: backendservice
  ignore_errors: true
- name: delete a health check
  google.cloud.gcp_compute_health_check:
    name: healthcheck-targettcpproxy
    type: TCP
    tcp_health_check:
      port_name: service-health
      request: ping
      response: pong
    healthy_threshold: 10
    timeout_sec: 2
    unhealthy_threshold: 5
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: absent
  register: healthcheck
  ignore_errors: true
- name: delete a instance group
  google.cloud.gcp_compute_instance_group:
    name: instancegroup-targettcpproxy
    zone: us-central1-a
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: absent
  register: instancegroup
  ignore_errors: true
