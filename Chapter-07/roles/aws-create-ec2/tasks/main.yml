---
# tasks file for aws-create-vm

- name: Fetch Instances by tag, subnet and type
  amazon.aws.ec2_instance_info:
    profile: "{{ aws_boto_profile }}"
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ item.value.name }}"
      #network-interface.subnet-id: "{{ item.value.vpc_subnet_id }}"
      instance-type: "{{ item.value.instance_type }}"
      instance-state-name: ["running", "stopped", "stopping", "starting", "pending"]
  loop: "{{ lookup('dict', ec2_new_list, wantlist=True) }}"
  register: ec2_collected

- name: Collect ec2 in a list
  set_fact:
    existing_ec2_list: "{{ existing_ec2_list }} + {{ item }}"
  loop: "{{ ec2_collected | json_query('results[*].instances[*].tags.Name') }}"
  #loop: "{{ ec2_collected | json_query('results[*].invocation.module_args.instance_ids') }}"

- debug:
    msg: "{{ existing_ec2_list }}"

- name: Launching EC2 instances
  amazon.aws.ec2_instance:
    profile: "{{ aws_boto_profile }}"
    key_name: "{{ aws_demo_key }}"
    security_group: "{{ aws_security_group }}"
    instance_type: "{{ item.value.instance_type }}"
    image_id: "{{ aws_ami_id }}" 
    state: running
    wait: true
    #wait_timeout: 300
    #count: 1
    region: "{{ aws_region }}"
    tags:
       Name: "{{ item.value.name }}"
    detailed_monitoring: no
    vpc_subnet_id: "{{ vpc_subnet_list | random }}"
    network:
      assign_public_ip: yes
  loop: "{{ lookup('dict', ec2_new_list, wantlist=True) }}"
  when: "not item.value.name in existing_ec2_list"
  register: created_ec2
  ## wait is not working with ec2_instance module
  ## refer https://github.com/ansible-collections/amazon.aws/issues/564

#- name: Create a temp list for new ec2
#  ansible.builtin.set_fact:
#    new_ec2_list: []

- name: Collect newly created ec2 in a list
  ansible.builtin.set_fact:
    new_ec2_list: "{{ new_ec2_list }} + [ '{{ item.instances[0].public_ip }}' ]"
  when: item.instances[0].public_ip is defined
  loop: "{{ created_ec2.results }}"

- name: Status
  ansible.builtin.debug:
    msg: "{{ item }} : Waiting for instances online..."
  with_items: "{{ new_ec2_list }}"

- name: Wait for SSH
  ansible.builtin.wait_for:
    host: "{{ item }}"
    port: 22
    delay: 3
    connect_timeout: 180
    sleep: 5
    state: started
  with_items: "{{ new_ec2_list }}"

- name: Fetch Instances by tag, subnet and type
  amazon.aws.ec2_instance_info:
    profile: "{{ aws_boto_profile }}"
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ item.value.name }}"
      #network-interface.subnet-id: "{{ item.value.vpc_subnet_id }}"
      instance-type: "{{ item.value.instance_type }}"
      instance-state-name: ["running", "stopped", "stopping", "starting", "pending"]
  loop: "{{ lookup('dict', ec2_new_list, wantlist=True) }}"
  register: ec2_existing_collected

- name: Update Amazon ELB and add instance ids
  amazon.aws.ec2_elb_lb:
    profile: "{{ aws_boto_profile }}"
    name: "{{ aws_elb_app_lb }}"
    region: "{{ aws_region }}"
    zones:
      - "{{ ap_zone1 }}"
      - "{{ ap_zone2 }}"
    listeners:
      - protocol: http
        load_balancer_port: 80
        instance_port: 80
        proxy_protocol: True
    instance_ids:
      - "{{ item.instances[0].instance_id }}"
    state: present
  register: elbcreated
  loop: "{{ ec2_existing_collected.results }}"

- name: Collect ec2 Public IP in a list
  ansible.builtin.set_fact:
    existing_ec2_public_ips: "{{ existing_ec2_public_ips }} + [ '{{ item.instances[0].public_ip_address }}' ] "
  loop: "{{ ec2_existing_collected.results }}"

- name: Add ec2 instances to a host group
  ansible.builtin.add_host:
    name: "{{ item }}" 
    groups: "{{ inventory_webgroup }}"
    ansible_ssh_extra_args: ' -o StrictHostKeyChecking=no '
  loop: "{{ existing_ec2_public_ips }}"
